name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Шаг: Проверка кода
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r network_wiki/services/backend/requirements.txt
          
      # Шаг: Установка Docker Compose
      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
      # Шаг: Сборка контейнеров
      - name: Build Docker containers
        run: |
          docker-compose -f network_wiki/docker-compose.yaml build

      - name: Start PostgreSQL
        run: |
          docker-compose -f network_wiki/docker-compose.yaml up -d postgres
          
      - name: Wait for PostgreSQL to start
        run: |
          echo "Waiting for PostgreSQL to start..."
          until docker-compose -f network_wiki/docker-compose.yaml exec postgres pg_isready -U admin -d networks_db; do
            echo "PostgreSQL is not ready yet. Retrying in 5 seconds..."
            sleep 5
          done
          echo "PostgreSQL is ready!"

      - name: Start application
        run: |
          docker-compose -f network_wiki/docker-compose.yaml up -d backend

      - name: Wait for application to start
        run: |
          echo "Waiting for application to start..."
          sleep 15  # Подождите 15 секунд
          curl --retry 5 --retry-delay 5 --retry-all-errors http://0.0.0.0:8000/uso/uso

      - name: Check running containers
        run: |
          docker-compose -f network_wiki/docker-compose.yaml ps
      - name: Wait for PostgreSQL to start
        run: |
          echo "Waiting for PostgreSQL to start..."
          sleep 30  # Подождите 30 секунд

      - name: Check running containers second
        run: |
          docker-compose -f network_wiki/docker-compose.yaml logs -f backend
          sleep 10
          docker-compose -f network_wiki/docker-compose.yaml ps -a
      
          
      # - name: Run tests
      #   run: |
      #     pytest network_wiki/services/backend/tests/
      # Шаг 8: Остановка контейнеров
      - name: Stop Docker containers
        if: always()  # Останавливает контейнеры даже если тесты упали
        run: |
          docker-compose -f network_wiki/docker-compose.yaml down
